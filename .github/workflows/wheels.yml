name: Build and test wheels

on:
  push:
    branches:
      - main
      - test
    tags:
      - '*'
  release:
    types: [published]

jobs:
  manylinux:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
            submodules: true

      - name: Set up Python 3.10
        uses: actions/setup-python@v5.4.0
        with:
          python-version: "3.10"

      - name: Build sdist
        shell: bash
        run: |
          python -m pip install --upgrade build
          python -m build

      - name: Upload
        uses: actions/upload-artifact@v4.6.1
        with:
          name: sdist-wheel
          path: dist


  OSX-test:
    needs: ['manylinux']
    runs-on: macos-13
    strategy:
      matrix:
        python: [3.8, 3.8, 3.9, "3.10", 3.11]
    steps:
      - name: Download wheels
        uses: actions/download-artifact@v4.2.0
        with:
          name: sdist-wheel
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5.4.0
        with:
          python-version: ${{ matrix.python }}
      - name: Install wheel and test
        run: |
          python -VV
          pip install wheel
          # Install the local wheel, after getting deps
          pip install tsdate --only-binary tsdate -f .
          pip uninstall --yes msprime
          pip install tsdate --no-index --only-binary tsdate -f .
          python -c "import tsdate"

  windows-test:
    needs: ['manylinux']
    runs-on: windows-latest
    strategy:
      matrix:
        python: [3.8, 3.9, "3.10", 3.11]
        wordsize: [64]
    steps:
      - name: Download wheels
        uses: actions/download-artifact@v4.2.0
        with:
          name: sdist-wheel
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5.4.0
        with:
          python-version: ${{ matrix.python }}
      - name: Install wheel and test
        run: |
          python -VV
          pip install wheel
          # Install the local wheel, after getting deps
          pip install tsdate --only-binary tsdate -f .
          pip uninstall --yes msprime
          pip install tsdate --no-index --only-binary tsdate -f .
          python -c "import tsdate"

  manylinux-test:
    runs-on: ubuntu-24.04
    needs: ['manylinux']
    strategy:
      matrix:
        python: [3.8, 3.9, "3.10", 3.11]
    steps:
      - name: Download wheels
        uses: actions/download-artifact@v4.2.0
        with:
          name: sdist-wheel
      - name: Set up Python
        uses: actions/setup-python@v5.4.0
        with:
          python-version: ${{ matrix.python }}
      - name: Install wheel and test
        run: |
          python -VV
          pip install wheel
          # Install the local wheel, after getting deps
          pip install tsdate --only-binary tsdate -f .
          pip uninstall --yes msprime
          pip install tsdate --no-index --only-binary tsdate -f .
          python -c "import tsdate"


  PyPI_Upload:
    runs-on: ubuntu-24.04
    needs: ['windows-test', 'OSX-test', 'manylinux-test']
    environment: release
    permissions:
      id-token: write
    steps:
      - name: Download all
        uses: actions/download-artifact@v4.2.0
      - name: Move to dist
        run: |
          mkdir dist
          cp */*.{whl,gz} dist/.
      - name: Publish distribution to Test PyPI
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@v1.12.4
        with:
          repository_url: https://test.pypi.org/legacy/
      - name: Publish distribution to PRODUCTION PyPI
        if: github.event_name == 'release'
        uses: pypa/gh-action-pypi-publish@v1.12.4

